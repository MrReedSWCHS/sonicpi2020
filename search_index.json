[
["index.html", "Sonic Pi 1 Introduction 1.1 Help me! 1.2 Install 1.3 If you’re on a Mac…", " Sonic Pi Cambridge Faculty of Education Workshops 2020 1 Introduction This is an introduction to Sonic Pi, the free, open-source Music software. The menu pages on the left are written consecutively. The actual content of this website takes 30 mins ish, plus time for you to experiment. We will meet again at 10am on 17th June to discuss next steps, philosophy and Q+A 1.1 Help me! I’m live on Zoom chat if there’s an issue. And there’s a lovely tutorial in the program itself. 1.2 Install Please install now so that you can try it out as we go: https://sonic-pi.net Sonic Pi runs on Mac, Windows and Linux, but unfortunately not tablets/mobiles. 1.3 If you’re on a Mac… Since it’s not authorised through the App Store, installing can be a bit of a pain. You might have to open System Preferences and open Security and Privacy. Towards the bottom of this window, you should be able to click on Open Anyway. You should only have to do this the first time you run the software. "],
["start-here.html", "2 Start here 2.1 Sam Aaron 2.2 Shape of You 2.3 MIDI Notes", " 2 Start here Watch this video for an introduction to the software. Sorry about the distortion! I’ll talk quieter next time! 2.1 Sam Aaron The first 2:30 of this video are a great explanation. All of Sam’s youtube videos are excellent. 2.2 Shape of You Try to program Shape of You for 5 mins It starts with: play 61 2.3 MIDI Notes Here’s a list of MIDI note numbers to help you convert from notes to numbers: "],
["note-names.html", "3 Note Names 3.1 Options and release: 3.2 Note names 3.3 Note names", " 3 Note Names Experiment using these code improvements for 5 mins 3.1 Options and release: Use amp: to change the volume (amp: 1 is default) play :cs5, amp: 1.5 Use release to change the release portion of the synth envelope (how long the note lasts). play :cs5, release: 0.2 3.2 Note names play 61 is equal to play :cs4 Sharp = s Flat = f E.g. :cs5 and :ef3 3.3 Note names Here are the note names again "],
["repetition.html", "4 Repetition 4.1 Looping 4.2 x.times 4.3 loop 4.4 play_pattern_timed 4.5 Chords", " 4 Repetition 4.1 Looping You can loop a block of code like this: loop do play 70 sleep 1 end The do and end act like brackets. They enclose code blocks in many situations. Here is a composition by some pupils a few years ago. 4.2 x.times 3.times do play 70 sleep 1 end You can nest do/end blocks: 3.times do play 70 sleep 1 5.times do play 71 sleep 1 end end Notice there are two ends because there are two dos, like pairs of brackets. 4.3 loop A simple loop block: loop do play 70 sleep 1 end 4.4 play_pattern_timed use_bpm 40 play_pattern_timed [:cs4, :e4, :cs4], [0.3, 0.3, 0.2], release: 0.2 4.5 Chords play [:cs5, :e5, :gs5] is the same as: play chord(:cs5, :minor) "],
["what-next.html", "5 What next?", " 5 What next? "],
["live-session.html", "6 Live session", " 6 Live session Resources for our live session next week. Handout "]
]
